{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","event","props","className","local_time","local_date","name","group","yes_rsvp_count","onClick","dangerouslySetInnerHTML","__html","description","Component","EventList","events","map","key","id","mockEvents","created","duration","rsvp_limit","date_in_series_pattern","status","time","updated","utc_offset","waitlist_count","venue","lat","lon","repinned","address_1","city","country","localized_country_name","join_mode","urlname","who","localized_location","region","timezone","link","visibility","member_pay_fee","getSuggestions","query","a","window","location","href","startsWith","name_string","zip","getAccessToken","token","url","axios","get","result","data","getEvents","page","navigator","onLine","localStorage","getItem","JSON","parse","accessToken","code","URLSearchParams","search","getOrRenewAccessToken","lastSavedTime","Date","now","type","tokenInfo","setItem","access_token","refresh_token","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","suggestions","infoText","handleInputChanged","value","target","then","length","handleItemClicked","updateEvents","placeholder","onChange","item","NumberOfEvents","numberOfEvents","App","defaultCity","response","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.ac8cc978.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Event extends Component {\n\n    state = {\n        showDetails: false,\n      }\n\n      handleShowDetails = () => {\n        if(this.state.showDetails === false) {\n          this.setState({ showDetails: true });\n        }\n        else {\n          this.setState({ showDetails: false });\n        }\n      }\n\n  render() {\n      const showDetails = this.state.showDetails;\n      const event = this.props.event;\n      \n    return (\n      <div className=\"event\">\n          <div className=\"main-info\">\n            <p className=\"time\">{this.props.event.local_time} - {this.props.event.local_date}</p>\n            <p className=\"name\">{this.props.event.name}</p>\n            <p className=\"group-name\">{this.props.event.group.name}</p>\n            <p className=\"going\">Going: {this.props.event.yes_rsvp_count}</p>\n\n          {showDetails &&\n            <button className=\"details-btn\" onClick={() => this.handleShowDetails()}>hide details</button>\n          }\n          {!showDetails &&\n            <button className=\"details-btn\" onClick={() => this.handleShowDetails()}>show details</button>\n          }\n        </div>\n\n          {showDetails &&\n          <div className=\"event-details\">\n            <div className=\"description\" dangerouslySetInnerHTML={{__html: event.description}} />\n          </div>\n          }\n\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  \n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map(event =>\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","const mockEvents = {\n    city: {\n      id: 1007700,\n      city: \"München\",\n      lat: 48.14,\n      lon: 11.58,\n      state: \"\",\n      country: \"de\",\n      zip: \"meetup3\",\n      member_count: 1257\n    },\n    events:[\n      {\n        created: 1563825339000,\n        duration: 9000000,\n        id: \"263370107\",\n        name: \"Microservices mit dem MicroProfile 3.x\",\n        rsvp_limit: 80,\n        date_in_series_pattern: false,\n        status: \"upcoming\",\n        time: 1566925200000,\n        local_date: \"2019-08-27\",\n        local_time: \"19:00\",\n        updated: 1563825339000,\n        utc_offset: 7200000,\n        waitlist_count: 79,\n        yes_rsvp_count: 80,\n        venue: {\n        id: 26266792,\n        name: \"adesso AG\",\n        lat: 53.54524230957031,\n        lon: 9.950983047485352,\n        repinned: false,\n        address_1: \"Große Elbstraße 36\",\n        city: \"Hamburg\",\n        country: \"de\",\n        localized_country_name: \"Deutschland\"\n        },\n        group: {\n        created: 1387402147000,\n        name: \"Java User Group Hamburg\",\n        id: 11500362,\n        join_mode: \"open\",\n        lat: 53.54999923706055,\n        lon: 10,\n        urlname: \"jug-hamburg\",\n        who: \"Mitglieder\",\n        localized_location: \"Hamburg, Deutschland\",\n        state: \"\",\n        country: \"de\",\n        region: \"de_DE\",\n        timezone: \"Europe/Berlin\"\n        },\n        link: \"https://www.meetup.com/de-DE/jug-hamburg/events/263370107/\",\n        description: '<p>(This event is co-organized with the Rust User Group: <a href=\"https://www.meetup.com/de-DE/rust-munich/events/259984522/\" class=\"linkified\">https://www.meetup.com/de-DE/rust-munich/events/259984522/</a>)</p> <p>IPFS is meant to be not just a number of programs from protocol labs, but a set of cleanly specified open protocols that can be implemented in many different languages for everybody that needs a peer to peer networking stack to write p2p applications.</p> <p>Pierre Krieger, also known as tomaka on github and twitter, is going to talk about the rust implementation of libp2p that is being developed for parity.io.</p> ',\n        visibility: \"public\",\n        member_pay_fee: false\n      }\n    ]\n  };\n  \n  export { mockEvents };","import axios from 'axios';\nimport { mockEvents } from './mock-events';\n\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85\n      }\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n      + query\n      + '&access_token=' + token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n}\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  if (!navigator.onLine) {\n    const events = localStorage.getItem('lastEvents');\n    return JSON.parse(events);\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n      + '&access_token=' + token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    if (page) {\n      url += '&page=' + page;\n    }\n    if (lat && lon && page) {\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\n    }\n    const result = await axios.get(url);\n    const events = result.data.events;\n    return events;\n  }\n\n};\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if (!code) {\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=j5dme247dh7vive49764n5cupn&response_type=code&redirect_uri=https://kevmhughes.github.io/meetup/';\n      return null;\n    }\n\n    return getOrRenewAccessToken('get', code);\n  }\n\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n    return accessToken\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n\n  return getOrRenewAccessToken('renew', refreshToken);\n};\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url = 'https://ln37ouztc7.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\n      + key;\n  } else if (type === 'renew') {\n    // Lambda endpoint to get token by refresh_token\n    url = 'https://ln37ouztc7.execute-api.eu-central-1.amazonaws.com/dev/api/refreshtoken/'\n      + key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n};\n\nexport { getSuggestions, getEvents, getAccessToken };\n\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n      super(props);\n      this.color = 'blue';\n    }\n  }\n\n  class ErrorAlert extends Alert {\n    constructor(props) {\n      super(props);\n      this.color = 'red';\n    }\n  }\n\n  export { InfoAlert, ErrorAlert };","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n    infoText: ''\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then(suggestions => {\n      this.setState({ suggestions });\n\n      if (value && suggestions.length === 0) {\n        this.setState({\n          infoText: 'We can not find the city you are looking for. Please try another city',\n        });\n      } else {\n        this.setState({\n          infoText: '',\n        });\n      }\n    });\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <div className=\"info-alert\">\n        <InfoAlert text={this.state.infoText} />\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"Your chosen city\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n        />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map(item => (\n            <li\n              key={item.name_string}\n              onClick={() =>\n                this.handleItemClicked(item.name_string, item.lat, item.lon)\n              }\n            >\n              {item.name_string}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n\n    state = {\n        numberOfEvents: 32,\n      }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({ numberOfEvents: value });\n        this.props.updateEvents(null, null, value);\n\n        if (value  <= 0) {\n          this.setState({\n            infoText: 'The number needs to be at least 1',\n          });\n        } else {\n          this.setState({\n            infoText: '',\n          });\n        }\n\n      }\n\n  render() {\n    return(\n      <div className=\"number-of-events\">\n        <div className=\"error-alert\">\n          <ErrorAlert text={this.state.infoText} />\n        </div>\n        <label>Number of events: </label>\n        <input\n          type=\"number\"\n          className=\"number-of-events-input\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;","import React, { Component } from 'react';\nimport './App.css';\n\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents } from './api';\n\nclass App extends Component {\n  \n  componentDidMount() {\n    getEvents().then(response => this.setState({ events: response }));\n  }\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: '',\n    lat: null,\n    lon: null\n  };\n  \n  \n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(response =>\n        this.setState({ events: response, lat, lon })\n      );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(response =>\n        this.setState({ events: response, page })\n      );\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(\n        response => this.setState({ events: response })\n      );\n    }\n  };\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className = \"header\">Meetup</h1>\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents updateEvents={this.updateEvents}/>\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config('cf2bc20e86714052afd7251cf5d36f5c').install();\n"],"sourceRoot":""}